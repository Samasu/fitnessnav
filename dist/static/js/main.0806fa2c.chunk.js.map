{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","store/reducers/authReducer.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","class","map","item","key","id","user","content","ProjectSummary","project","title","authorFirstName","ProjectList","projects","Dashboard","this","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","authorLastName","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","initState","authReducer","action","message","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProject","authorId","add","createAt","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0806fa2c.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut} from '../../store/actions/authActions'\n\n\nconst SignedInLinks = (props) => {\n    return(\n        <ul className=\"right\">\n         <li><NavLink to='/create'>New Project</NavLink></li>\n         <li><a onClick={props.signOut}>Log Out</a></li>\n         <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\n          {props.profile.initials}\n         </NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispathToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\nexport default connect(null, mapDispathToProps)(SignedInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n       const firebase = getFirebase();\n\n       firebase.auth().signInWithEmailAndPassword(\n           credentials.email,\n           credentials.password\n       ).then(() => {\n        dispatch({ type: 'LOGIN_SUCCESS' });\n       }).catch((err) => {\n        dispatch({ type: 'LOGIN_ERROR', err });\n       });\n     }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase =getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\n        });\n    }\n}\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch ({ type: 'SIGNUP_SUCCESS'})\n        }).catch(err => {\n            dispatch ({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return(\n        <ul className=\"right\">\n         <li><NavLink to='/signup'>Signup</NavLink></li>\n         <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    )\n}\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n    return(\n        <nav className=\"nav-wrapper grey darken-3\">\n         <div className=\"container\">\n          <Link to ='/' className=\"brand-logo\">Mario Plan</Link>\n          { links }\n         </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      auth: state.firebase.auth,\n      profile: state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\n\nconst Notifications = (props) => {\n    const {notifications} = props;\n    return(\n        <div className=\"section\">\n         <div className=\"col s12 m6\">\n          <div className=\"card blue-grey darken-1\">\n          <div class=\"card-content white-text\">\n           <span className=\"card-title\">Notifications</span>\n             <ul className=\"notifications\">\n              {notifications && notifications.map(item => {\n                  return (\n                      <li key={item.id}>\n                       <span className=\"pink-text\"> {item.user}</span>\n                       <span>{item.content}</span>\n                      </li>\n                  )\n              })}\n             </ul>\n           </div>\n          </div>\n         </div>\n        </div>\n    )\n}\n\nexport default Notifications","import React from 'react'\nimport moment from 'moment'\n\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n         <div className=\"card-content grey-text text-darken-3\">\n          <span className=\"card-title\">{project.title}</span>\n          <p>Posted by {project.authorFirstName}</p>\n          <p className=\"grey-text\"></p>\n         </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n    return (\n        <div className=\"project-list section\">\n         { projects && projects.map(project => {\n           return (\n             <Link to= {'/project/' + project.id} key={project.id}>\n             <ProjectSummary project={project} />\n             </Link>\n           )\n         })}\n        </div>\n    )\n}\nexport default ProjectList","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n    render(){\n        const { projects, auth, notifications} = this.props;\n        if(!auth.uid) return <Redirect to='/signin' />\n\n\n\n        return(\n            <div className=\"dashboard container\">\n             <div className=\"row\">\n              <div className=\"col s12 m6\">\n               <ProjectList projects={projects}/>\n              </div>\n              <div className=\"col s12 m5 offset-m1\"></div>\n               <Notifications notifications={notifications}/>\n             </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\nexport default compose(\n connect(mapStateToProps),\n firestoreConnect([\n     { collection: 'projects', orderBy: ['createAt', 'desc']},\n     { collection: 'notifications', limit: 3, orderBy: ['time','desc']}\n ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props;\n\n    if (!auth.uid) return <Redirect to='/signin' />\n    if (project) {\n     return(\n       <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n         <div className=\"card-content\">\n          <span className=\"card-title\">{ project.title }</span>\n          <p>{ project.content }</p>\n         </div>\n         <div className=\"card-action grey lighten-4 grey-text\">\n          <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n          <div>2nd Septembaer, 2am</div>\n         </div>\n        </div>\n       </div>\n     )\n    } else {\n        return (\n         <div className=\"container center\">\n          <p>Loading project...</p>\n         </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    //console.log(state);\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null\n    return {\n      project: project,\n      auth: state.firebase.auth\n\n    }\n}\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects'}\n    ])\n)(ProjectDetails)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n        \n    }\n    render() {\n        const { authError, auth } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n             <form onSubmit={this.handleSubmit} className=\"white\">\n              <h5 className=\"grey-text text-darken-3\">Sign IN</h5>\n              <div className=\"input-field\">\n               <label htmlFor=\"email\">Email</label>\n               <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n               <label htmlFor=\"password\">Password</label>\n               <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n               <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n               <div className= \"red-text center\">\n                { authError? <p>authError</p> : null}\n               </div>\n              </div>\n             </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state= initState, action) => {\n switch(action.type) {\n    case 'LOGIN_ERROR':\n     console.log('login error');\n     return {\n        ...state,\n        authError: 'Login failed'\n     }\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n          ...state,\n          authError: null\n      }\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state;\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNUP_ERROR':\n      console.log('signup error');\n      return {\n        ...state,\n        authError: action.err.message\n      }\n    default:\n      return state;\n}\n return state\n}\n\nexport default authReducer","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport {signUp} from '../../store/actions/authActions'\nimport authReducer from '../../store/reducers/authReducer';\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state)\n        \n    }\n    render() {\n        const { auth, authError } = this.props;\n        if (auth.id) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n             <form onSubmit={this.handleSubmit} className=\"white\">\n              <h5 className=\"grey-text text-darken-3\">Sign UP</h5>\n              <div className=\"input-field\">\n               <label htmlFor=\"email\">Email</label>\n               <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n               <label htmlFor=\"password\">Password</label>\n               <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n               <label htmlFor=\"firstName\">FirstName</label>\n               <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n               </div>\n               <div className=\"input-field\">\n               <label htmlFor=\"lastName\">LastName</label>\n               <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n               </div>\n              <div className=\"input-field\">\n               <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\n               <div className=\"red-text center\">\n                { authError? <p>{ authError }</p> : null}\n               </div>\n              </div>\n             </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createAt: new Date()\n        }).then(() => {\n         dispatch({ type: 'CREATE_PROJECT', project });\n        }).catch((err) => {\n         dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n        })\n        \n\n    }\n};","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state)\n        this.props.history.push('/')\n    }\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className=\"container\">\n             <form onSubmit={this.handleSubmit} className=\"white\">\n              <h5 className=\"grey-text text-darken-3\">Create fucking project!</h5>\n              <div className=\"input-field\">\n               <label htmlFor=\"title\">Title</label>\n               <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n               <label htmlFor=\"content\">Project Content</label>\n               <textarea id=\"content\" className=\"materializa-textarea\" onChange={this.handleChange}></textarea>\n              </div>\n              <div className=\"input-field\">\n               <button className=\"btn pink lighten-1 z-depth-0\">Create project!!!!</button>\n              </div>\n             </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} /> \n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    projects:[\n        {id: '1', title:'eeeeeeeee', content: 'aaaaaaaa'},\n        {id: '2', title:'eeeeeeeee', content: 'aaaaaaaa'},\n        {id: '3', title:'eeeeeeeee', content: 'aaaaaaaa'}\n    ]\n}\n \n\nconst projectReducer = (state = initState, action) => {\n switch (action.type) {\n    case 'CREATE_PROJECT':\n        console.log('created project', action.project)\n        return state;\n    case 'CREATE_PROJECT_ERROR':\n        console.log('create project error', action.err);\n        return state;\n    default:\n        return state;\n }\n}\n\nexport default projectReducer\n","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n\nvar config = {\n    apiKey: \"AIzaSyANIymtDWjHIx_XK29KTIzV-V2Tx9pjIiI\",\n    authDomain: \"netninja-d125d.firebaseapp.com\",\n    databaseURL: \"https://netninja-d125d.firebaseio.com\",\n    projectId: \"netninja-d125d\",\n    storageBucket: \"\",\n    messagingSenderId: \"890091264883\",\n    appId: \"1:890091264883:web:4ae8517756f8cf341c8306\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(config);\n\n  firebase.firestore().settings({ timestampsInSnapshots: true })\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n    )   \n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}